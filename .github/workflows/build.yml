name: KomornikGPT CI/CD

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'src/main/frontend/komornik-gpt/package-lock.json'

      - name: Set up Java 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and test (including frontend)
        run: mvn -B verify -DskipFrontend=false -Pdocker-build

      - name: Verify static files were built
        run: |
          ls -la src/main/resources/static/ || echo "No static directory found"
          jar -tf target/*.jar | grep -E "(index\.html|static/)" | head -10 || echo "No static files in JAR"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar
          retention-days: 1
  deploy:
    needs: build-and-test
    if: |
      success() && 
      (github.event_name == 'push') && 
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')) &&
      contains(github.event.head_commit.message, 'DEPLOY')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set version variables
        id: vars
        run: |
          echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
          echo "BUILD_DATE=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          # If this is a tag, use the tag name as version
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/komornik-gpt:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/komornik-gpt:${{ steps.vars.outputs.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/komornik-gpt:${{ steps.vars.outputs.SHORT_SHA }}
            ${{ secrets.DOCKERHUB_USERNAME }}/komornik-gpt:${{ steps.vars.outputs.BUILD_DATE }}-${{ steps.vars.outputs.SHORT_SHA }}
            ${{ steps.vars.outputs.TAG != '' && format('{0}/komornik-gpt:{1}', secrets.DOCKERHUB_USERNAME, steps.vars.outputs.TAG) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max