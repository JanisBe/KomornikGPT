<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>Komornik</artifactId>
    <description>Komornik</description>
    <groupId>com.janis</groupId>
    <name>KomornikGPT</name>
    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <relativePath/>
        <version>3.5.3</version>
    </parent>
    <properties>
        <java.version>21</java.version>
        <jjwt.version>0.12.6</jjwt.version>
        <lombok.version>1.18.38</lombok.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.version>3.9.9</maven.version>
        <postgresql.version>42.7.7</postgresql.version>
        <skipFrontend>false</skipFrontend>
        <spring.security.test.version>6.5.1</spring.security.test.version>
        <webauthn4j-spring-security.version>0.11.2.RELEASE</webauthn4j-spring-security.version>
        <webauthn4j-core.version>0.29.3.RELEASE</webauthn4j-core.version>
        <frontend.build.script>run build</frontend.build.script>
    </properties>
    <version>0.0.1-SNAPSHOT</version>
    <dependencies>
        <!-- Spring Boot Dependencies -->
        <dependency>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-boot-starter-web</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-boot-starter-validation</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-boot-starter-security</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-boot-starter-mail</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-boot-starter-test</artifactId>
            <groupId>org.springframework.boot</groupId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- Additional Dependencies -->
        <dependency>
            <artifactId>jjwt</artifactId>
            <groupId>io.jsonwebtoken</groupId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <artifactId>jjwt-api</artifactId>
            <groupId>io.jsonwebtoken</groupId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <artifactId>jjwt-impl</artifactId>
            <groupId>io.jsonwebtoken</groupId>
            <scope>runtime</scope>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <artifactId>jjwt-jackson</artifactId>
            <groupId>io.jsonwebtoken</groupId>
            <scope>runtime</scope>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <artifactId>postgresql</artifactId>
            <groupId>org.postgresql</groupId>
            <version>${postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>com.webauthn4j</groupId>
            <artifactId>webauthn4j-spring-security-core</artifactId>
            <version>${webauthn4j-spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>com.webauthn4j</groupId>
            <artifactId>webauthn4j-core</artifactId>
            <version>${webauthn4j-core.version}</version>
        </dependency>
        <dependency>
            <artifactId>lombok</artifactId>
            <groupId>org.projectlombok</groupId>
            <version>${lombok.version}</version>
        </dependency>
        <dependency>
            <artifactId>spring-security-test</artifactId>
            <groupId>org.springframework.security</groupId>
            <scope>test</scope>
            <version>${spring.security.test.version}</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>1.15.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.15.1</version>
                <configuration>
                    <workingDirectory>./src/main/frontend/komornik-gpt/</workingDirectory>
                    <installDirectory>target</installDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>install-node-and-npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v20.19.0</nodeVersion>
                            <npmVersion>10.5.0</npmVersion>
                            <skip>${skipFrontend}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm-install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                            <skip>${skipFrontend}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm-build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>${frontend.build.script}</arguments>
                            <skip>${skipFrontend}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.18.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <releaseProfiles>release</releaseProfiles>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven.version}</version>
                                    <message>Invalid Maven version. It should, at least, be ${maven.version}</message>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                    <message>Invalid Java version. It should, at least, be ${java.version}</message>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-frontend</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/main/frontend/komornik-gpt/dist/browser</directory>
                                </resource>
                                <resource>
                                    <directory>src/main/frontend/komornik-gpt/public</directory>
                                </resource>
                            </resources>
                            <outputDirectory>${project.basedir}/src/main/resources/static</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker-build</id>
            <properties>
                <frontend.build.script>run buildProd</frontend.build.script>
            </properties>
        </profile>
        <profile>
            <id>docker-local</id>
            <properties>
                <frontend.build.script>run buildLocal</frontend.build.script>
            </properties>
        </profile>
    </profiles>
</project>

